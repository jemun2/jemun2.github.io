# C 언어 프로그램

- 프로그램 : '작업'을 지시하기 위한 것

- 기계어 : 컴퓨터가 그 작업의 '내용'을 이해하기 위해 사용하는 언어

- 프로그래밍 언어 :  컴퓨터, 사람 둘 다 이해할 수 있는 언어

- 컴파일러 : 프로그래밍 언어를 기계어로 변역하는 소프트웨어

  

  프로그래밍 실행 과정

![](https://www.nise.go.kr/sedu/pe/pe2/images/2_1/1_1_img4.jpg)



## 코드 입력

- 영문과 숫자는 전자(2바이트 문자)가 아닌 반자(1바이트 문자)로 입력합니다.
- 세미콜론(;)과 콜론(:)을 구별해서 입력하바니다.
- main 함수를 가장 먼저 실행합니다.
- 프로그램의 작성, 실행 과정

> - 텍스트 에디터 등에 C 언어 코드를 입력한다.
> - 컴파일러를 실행시켜서 작성한 소스 파일을 컴파일한다.
> - 링커를 실행시켜서 컴파일된 오브젝트 파일을 링크한다.
> - 작성된 프로그램을 실행한다.



## 코드의 기본

- main() 함수 : 이 부분부터 처리가 이루어진다. 중괄호({}) 사이의 코드들이  실행된다.

- 원칙적으로 처음부터 차례대로 하나씩 처리합니다.

- printf : '화면으로 문자열을 표시' 하는 처리를 나타낸다.

- 주석 : /* 부터 */ 까지의 문자를 무시하고 처리합니다.

- 인클루드(include) : 화면으로 표시를 실행하는 기능이 포함된 stdio.h 라는 파일을 컴파일 전에 읽어두는 행.

  

## 화면 출력

- 표준 출력(standard output) : 문자열을 '화면' 으로 출력하는 처리를 하라고 내리는 지시이다.

- 줄바꿈 : '\n' 이라는 기호로 '줄바꿈(개행)' 이라는 의미를 나타낸다.

- 변환 사양 : 문자, 정수, 소수가 각각 %c, %d, %f의 부분에 대입되어 출력됩니다.

- 문자열 : 큰따옴표("")로 묶어서 표기한다.

- 정수는 8진수와 16진수로 나타낼 수 있다.

- 이스케이프 시퀀스

  | 이스케이스 시퀀스 | 의미하고 있는 문자 |
  | :---------------: | :----------------: |
  |        \b         |    백 스페이스     |
  |        \n         |      줄 바꿈       |
  |        \'         |         '          |
  |        \\\        |         \          |
  |        \"         |         "          |



## 변수

- 변수는 값을 저장할 수 있습니다.

- 변수라는 이름과 형을 지정해서 선언합니다.

- 변수 이름은 식별자를 사용합니다

- 변수에 값을 대입하려면 '=' 기호를 사용합니다.

- 변수를 초기화하면 변수 선언과 동시에 값을 저장할 수 있습니다.

- 변수에  새로운 값을 대입하면 저장되어 있는 값이 변경됩니다.

  ![](https://s3-ap-northeast-2.amazonaws.com/opentutorials-user-file/module/3921/9899.png)

- 키보드로 수치를 입력하려면 scanf 등을 사용합니다.

- 키보드로 문자를 입력하려면 getchar 등을 사용합니다.



## 식과 연산자

| **기호** |       **이름**       |
| :------: | :------------------: |
|    +     |         덧셈         |
|    -     |         뺄셈         |
|    *     |         곱셈         |
|    /     |        나눗셈        |
|    %     |        나머지        |
|    =     |         대입         |
|   ( )    | 캐스트(강제 형 변환) |

![](https://windowsforum.kr/files/attach/images/4356426/109/435/004/f4ae7609a553d3becaec7de4e7d7525f.jpg)

- 연산자는 피연산자와 조합시켜 식을 만듭니다.
- 증가, 감소 연산자를 사용하면 변수 값을 1 증가 또는 감소시킬 수 있습니다.
- 복합 대입 연산자를 사용하면 사칙연산과 대입 연산자를 조합시켜 처리를 할 수 있습니다.
- sizeof 연산자를 사용하면 형과 식의 크기를 알 수 있습니다.
- 값이  작은 크기의 형으로 변환하면 값의 일부가 없어질 수 있습니다.
- 캐스트 연산자를 사용하면 형을 변환할 수 있습니다.
- 대입할 때 형이 변환되는 경우도 있습니다.
- 사칙연산을 할 때 형이 변환될 수도 있습니다.



## 관계 연산자와 조건

- 조건 : 상황에 따른 처리를 할 수 있게 하는것

- if 문 : ()안의 조건이 참일때, 중괄호({}) 사이의 행들을 실행시킨다.

- if ~ else 문 : 조건이 참일때 특정한 처리를 하고 조건이 거짓일 때 지정한 문을 처리한다.

  ![](https://th.bing.com/th/id/OIP.U9Sfj6z17cNC5Ns4lbPudAEDDx?o=6&pid=Api&rs=1)

- switch 문 : switch 문 안의 식이 case 뒤의 상수 값과 일치하면, 그 뒤의 문부터 'break' 까지의 문을 처리한다.

- 논리 연산자를 사용하여 복잡한 조건을 작성할 수 있다.

- 조건 연산자를  사용해서 간단한 조건에  따른 처리를 표기할 수 있다.
